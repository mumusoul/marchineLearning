# -*- coding: utf-8 -*-
"""
Created on Wed Oct 31 17:16:22 2018

@author: 沐日光华
"""

from math import log
import numpy as np

#创建简单测试数据
def createDataSet():
    dataSet=np.array([[1,1,'yes'],[1,1,'yes'],[1,0,'no'],[0,1,'no'],[0,1,'no']])
    labels=np.array(['nosurfacing','flippers'])
    return dataSet,labels

#计算给定数据集的香农熵    
def calcShannonEnt(dataSet):
    numEntries=len(dataSet)
    labelCounts={}      
    for featVec in dataSet:         #为可能分类创造字典
        currentLabel=featVec[-1]        #获取可能分类标签
        if currentLabel not in labelCounts.keys():      
            labelCounts[currentLabel]=0
        labelCounts[currentLabel]+=1
    shannonEnt=0.0
    for key in labelCounts:
        prob=float(labelCounts[key])/numEntries     #选择该分类的概率
        shannonEnt-=prob*log(prob,2)    #所有类别的信息期望值，熵
    return shannonEnt

#划分数据集
def splitDataSet(dataSet,axis,value):   #传入参数分别为待划分的数据集，划分特征，返回的特征值
    retDataSet=[]
    for featVec in dataSet:
        if featVec[axis]==value:
            reduceFeatVec=featVec[:axis]
            reduceFeatVec.extend(featVec[axis+1:])
            retDataSet.append(reduceFeatVec)
    return retDataSet
            



